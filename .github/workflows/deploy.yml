name: Deploy Application

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, labeled]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Amazon ECR
      id: ecr-login
      run: |
        if [[ "${{ github.event.pull_request.labels[0].name }}" == "production" ]]; then
          echo "Logging in to Production ECR"
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          ECR_REPO=${{ secrets.PROD_ECR_REPOSITORY }}
        else
          echo "Logging in to Development ECR"
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          ECR_REPO=${{ secrets.DEV_ECR_REPOSITORY }}
        fi
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin $ECR_REPO

    - name: Build Docker image
      id: build-image
      run: |
        docker build -t hello-world-app .
        echo "Image built with tag hello-world-app"

    - name: Tag Docker image
      id: tag-image
      run: |
        docker tag hello-world-app:latest $ECR_REPO:latest
        echo "Image tagged as latest"

    - name: Push Docker image to ECR
      id: push-image
      run: |
        docker push $ECR_REPO:latest
        echo "Image pushed to $ECR_REPO:latest"

    - name: Deploy to S3
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
        aws s3 cp ./deploy/ s3://${{ secrets.S3_BUCKET_NAME }}/ --recursive
        echo "Application deployed to S3 bucket"
