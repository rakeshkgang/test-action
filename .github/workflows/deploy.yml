name: Build and Deploy

on:
  pull_request:
    types: [opened, labeled, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Determine ECR Repository
      id: determine-ecr
      run: |
        echo "PR Labels: ${{ github.event.pull_request.labels }}"
        LABEL=$(echo "${{ github.event.pull_request.labels }}" | grep -o '"name": "[^"]*"' | grep -o '[^"]*$')
        echo "Label: $LABEL"
        
        if [ "$LABEL" == "production" ]; then
          echo "Using Production ECR"
          echo "ECR_REPO=${{ secrets.PROD_ECR_REPOSITORY }}" >> $GITHUB_ENV
        else
          echo "Using Development ECR"
          echo "ECR_REPO=${{ secrets.DEV_ECR_REPOSITORY }}" >> $GITHUB_ENV
        fi
      env:
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Build Docker image
      run: docker build -t my-app .

    - name: Log in to ECR
      run: |
        if [ "${{ env.ECR_REPO }}" == "${{ secrets.PROD_ECR_REPOSITORY }}" ]; then
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.PROD_ECR_REPOSITORY }}
        else
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.DEV_ECR_REPOSITORY }}
        fi

    - name: Push Docker image to ECR
      run: |
        docker tag my-app:latest ${{ env.ECR_REPO }}/my-app:latest
        docker push ${{ env.ECR_REPO }}/my-app:latest

    - name: Deploy to S3
      run: |
        aws s3 cp my-app.zip s3://my-bucket/
